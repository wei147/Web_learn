<template>
  <el-row :gutter="10">
    <el-col :xs="8" :sm="6" :md="4" :lg="3" :xl="1">
      <div class="grid-content bg-purple"></div>
    </el-col>
    <el-col :xs="4" :sm="6" :md="8" :lg="9" :xl="11" :offset="2">
      <!-- 上传图片区域 -->
      <div class="Left-area">
        <div class="grid-content bg-purple-light">
          <el-upload class="upload-demo" drag action=" " list-type="picture" :on-change="handleChange"
            :auto-upload="false" :limit="limit" :on-exceed="handleExceed" :multiple="false">
            <i class="el-icon-upload"></i>
            <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
            <div class="el-upload__tip">只能上传jpg/png文件,且不超过2M</div>
          </el-upload>
        </div>
      </div>
      <el-row :gutter="20">
        <el-col :span="12" :offset="17">
          <div class="middle-area"></div>
          <div class="grid-content bg-purple">
            <el-button style="margin-top: 10px;" type="primary" @click="submitUpload" :loading="loading">
              提取文本<i class="el-icon-arrow-right el-icon--right"></i>
            </el-button>
          </div>
        </el-col>
      </el-row>
    </el-col>
    <el-col :xs="4" :sm="6" :md="8" :lg="9" :xl="11">
      <!-- 文本框区域 -->
      <div class="right-area">
        <div class="grid-content bg-purple">
          <el-input type="textarea" :show-word-limit="true" :rows="10" placeholder="提取文本内容" v-model="text">
          </el-input>
          <el-button type="text" class="copyText" :disabled="show" @click="copyText(text)">复制</el-button>
        </div>
      </div>
    </el-col>
    <el-col :xs="8" :sm="6" :md="4" :lg="3" :xl="1">
      <div class="grid-content bg-purple-light"></div>
    </el-col>
  </el-row>

  <!-- 消息提醒区 -->
  <!-- <el-button :plain="true" @click="open2">成功</el-button>
  <el-button :plain="true" @click="open3">警告</el-button>
  <el-button :plain="true" @click="open1">消息</el-button>
  <el-button :plain="true" @click="open4">错误</el-button> -->
  <!-- 原生vue上传文件的写法 -->
  <!-- <div>
    <input type="file" @change="onFileChange">
    <button @click="submitUpload">上传</button>
    <img v-if="imageUrl" :src="imageUrl" alt="Uploaded Image">
  </div> -->
</template>

<script>
  import axios from 'axios'
  export default {
    data() {
      return {
        fileList: [],
        text: '',
        limit: 1,
        loading: false,
        show: true
      }
    },
    //注册局部组件
    components: {},
    methods: {
      //通过onchanne触发方法获得文件列表
      handleChange(file, fileList) {
        this.fileList = fileList;

        const isJPG = fileList[0].raw.type === "image/jpeg" || fileList[0].raw.type === "image/png";
        const isLt2M = fileList[0].raw.size / 1024 / 1024 < 2;

        if (!isJPG) {
          this.$message.error("上传图片格式只能是jpg或png !");
          this.fileList.clear();
        }
        if (!isLt2M) {
          this.$message.error('上传图片大小不能超过 2MB!');
          this.fileList.clear();
        }
        return isJPG && isLt2M;
      },
      async submitUpload() {
        if (this.fileList.length == 0) {
          return this.$message({
            message: '图片不能为空',
            type: 'warning'
          });
        }
        this.loading = true
        const formData = new FormData()
        // 这里的file要对应controller的@RequestParam 参数名
        //文件信息中raw才是真的文件
        formData.append("file", this.fileList[0].raw);
        try {
          axios.post('http://120.78.161.175:8081/getOcrText', formData, {
            timeout: 8500 * 1
          }).then(res => {
            // axios.post('http://localhost:8000/ocr/upload/file', formData).then(res => {
            if (res.data.status == 10000 || res.data.data != null) {
              this.open2()
              this.text = res.data.data
              this.loading = false
              this.show = false
            } else {
              this.loading = false
              this.open4()
            }
          })
        } catch (error) {
          if (error.code === 'ECONNABORTED' || error.message === "Network Error" || error.message.includes(
              "timeout")) {
            this.open5()
            this.loading = false
          } else {
            this.open4()
          }
        }
      },
      handleExceed() {
        this.open3()
      },
      copyText(copytext) {
        if (this.text != '') {
          const text = document.createElement('textarea'); // 创建节点
          text.setAttribute('readonly', 'readonly');
          text.value = copytext; // 赋值
          document.body.appendChild(text); // 插入节点
          text.setSelectionRange(0, text.value.length);
          text.select(); // 选中节点
          document.execCommand('copy'); // 执行浏览器复制方法
          if (document.body.removeChild(text)) {
            this.$message({
              type: 'success',
              message: '复制成功'
            })
          } else {
            this.$message({
              type: 'error',
              message: '复制失败'
            })
          }
        } else {
          this.$message('暂无文本可复制');
        }

      },
      open1() {
        this.$message('这是一条消息提示');
      },
      open2() {
        this.$message({
          message: '提取成功',
          type: 'success'
        });
      },

      open3() {
        this.$message({
          message: '只能上传一张图片喔',
          type: 'warning'
        });
      },

      open4() {
        this.$message.error('提取失败');
      },
      open5() {
        this.$message.error('请求超时，请稍后重试');
      },
    },
  }
</script>

<style>
  .el-col {
    border-radius: 4px;
  }

  /* .bg-purple-dark {
    background: #99a9bf;
  }

  .bg-purple {
    background: #d3dce6;
  }

  .bg-purple-light {
    background: #e5e9f2;
  }

  .grid-content {
    border-radius: 4px;
    min-height: 36px;
  } */

  .Left-area {
    margin-top: 20%;
  }

  .middle-area {
    margin-bottom: -20%;
  }

  .right-area {
    margin-top: 20%;
    margin-right: 20%;
  }

  .upload-demo {
    background-color: #fff;
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    box-sizing: border-box;
    width: 400px;
    height: 220px;
    text-align: center;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
</style>